{
  "grpcGateway": {
    "name": "example",
    "httpPort": 80,
    "grpcPort": 6080,
    "exitTimeout": "10s",
    "headers": ["X-Request-Id"], // 请求透传包头，默认透传 x- 开头包头
    "validators": ["Default"], // 请求包体校验，默认不校验
    "privateIP": "",
    "hostname": "",
    "requestIDMetaKey": "x-request-id", // request id 包头 key
    "usePascalNameLogKey": false, // rpc 日志使用大写驼峰风格，默认小写驼峰
    "usePascalNameErrKey": false, // 错误返回包体使用大写驼峰风格，默认小写驼峰
    "marshalUseProtoNames": true, // 序列化返回时，使用 proto 文件中的名字，默认使用小写驼峰
    "marshalEmitUnpopulated": false, // 序列化返回时，返回空字段，默认不返回
    "unmarshalDiscardUnknown": true, // 反序列化请求时，丢弃未知的字段，默认返回请求包体错误
    "enableTrace": true,
    "enableMetric": true,
    "enablePprof": true,
    "trace": {
      "constTags": {
        "key1": "val1"
      }
    },
    "metric": {
      "buckets": [0.1, 1, 10, 100],
      "constLabels": {
        "key1": "val1"
      }
    },
    "rateLimiterHeader": "x-user-id",
    "rateLimiter": {
      "type": "RedisRateLimiterInstance"
    },
    "parallelControllerHeader": "x-user-id",
    "parallelController": {
      "type": "RedisTimedParallelControllerInstance"
    },
    "jaeger": {
      "serviceName": "example",
      "sampler": {
        "type": "const",
        "param": 1
      },
      "reporter": {
        "logSpans": false
      }
    }
  },
  "parallelController": {
    "redis": {
      "redis": {
        "addr": "127.0.0.1:6379"
      },
      "wrapper": {
        "name": "parallelController",
        "enableTrace": true,
        "enableMetric": true
      }
    },
    "defaultMaxToken": 3,
    "maxToken": {
      "123|/api.ExampleService/Echo": 1
    },
    "interval": "3s",
    "expiration": "10s"
  },
  "rateLimiter": {
    "redis": {
      "redis": {
        "addr": "127.0.0.1:6379"
      },
      "wrapper": {
        "name": "rateLimiter",
        "enableTrace": true,
        "enableMetric": true
      }
    },
    "qps": {
      "123|/api.ExampleService/Echo": 1
    }
  },
  "logger": {
    "grpc": {
      "level": "Info",
      "writers": [{
        "type": "Stdout",
        "options": {
          "formatter": {
            "type": "Json",
            "options": {
              "flatMap": true
            }
          }
        }
      }, {
        "type": "RotateFile",
        "options": {
          "filename": "log/app.rpc",
          "maxAge": "24h",
          "formatter": {
            "type": "Json",
            "options": {
              "flatMap": true
            }
          }
        }
      }]
    },
    "info": {
      "level": "Info",
      "writers": [{
        "type": "Stdout",
        "options": {
          "formatter": {
            "type": "Json",
          }
        }
      }, {
        "type": "RotateFile",
        "options": {
          "filename": "log/app.log",
          "maxAge": "24h",
          "formatter": {
            "type": "Json"
          }
        }
      }]
    }
  }
}